package floorplans;
import java.util.*;
import java.awt.geom.Line2D;
import static java.lang.Math.pow;

public class NodeGeometry{
  public ArrayList<Integer> X;
  public ArrayList<Integer> Y;
  public ArrayList<Line2D.Float> L;
  public ArrayList<Integer> D;
  //TODO COSA E RESOLUTION? LA HO INVENTATA
  public int resolution = Globals.resolution;
  private int x1,y1;
  
  NodeGeometry(){
  X = new ArrayList<Integer>();
  Y = new ArrayList<Integer>();
  L = new ArrayList<Line2D.Float>();
  // Porte
  D = new ArrayList<Integer>();
  }
  
  void addPoint(int x, int y) {
    //TODO NON SO COSA SONO
      X.add(x);
      Y.add(y);
      if (X.size() != 1) {
        L.add(new Line2D.Float(x,y,x1,y1));
      }
      x1 = x;
      y1 = y;
  }
  
  void addDoor(int x, int y) {
	    //TODO NON SO COSA SONO
	      X.add(x);
	      Y.add(y);
	      if (X.size() != 1) {
	        L.add(new Line2D.Float(x,y,x1,y1));
	      }
	      x1 = x;
	      y1 = y;
	      D.add(X.size()-1);
	  }
  
  int lineSize() {
    return L.size();
  }
  
  // restituisce l'indice di un punto se è parte dell'offset. -1 al contrario.
  int pointIndex(int x, int y) {
  int tmpX,tmpY;
  for (int i=0; i < L.size(); i++) {
    tmpX = X.get(i);
    tmpY = Y.get(i);
    if  (pow(tmpX-x,2)+pow(tmpY-y,2) < resolution*resolution) {
      return i;
    }
  }
  return -1;
  }
 
  /*int changePoint(int index, int x, int y) {
  X.get(i) = x;
  Y.get(i) = y;
  if (i != 0) {
    // se i è il primo cambio solo quello. Se i è l'ultimo idem.
    //Se invece è uno in mezzo devo cambiare due segmenti. E poi fare backtracking.
  }
  } 
  */
}